{
  "workbench.colorTheme": "Solarized Light",
  "editor.formatOnSave": true,
  "editor.wordWrapColumn": 80,
  "vim.smartRelativeLine": true,
  "editor.minimap.enabled": false,
  "files.insertFinalNewline": true,

  // Vim easymotion is required for Jump menu - <SPC> j
  "vim.easymotion": true,
  // Use system clipboard for vim
  "vim.useSystemClipboard": true,
  // Trigger the main which key menu with in the active editor with vim
  // This cannot be put into keybindings.json because it will
  // create conflict with Vim.
  // https://github.com/stevenguh/spacecode/issues/3
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  // VSpacecode overrides
  "vspacecode.bindingOverrides": [
    {
      "keys": "c.d",
      "name": "Go to definition",
      "type": "command",
      "command": "editor.action.revealDefinition"
    },
    {
      "keys": "c.D",
      "name": "Search all references",
      "type": "command",
      "command": "editor.action.referenceSearch.trigger"
    },
    {
      "keys": "c.k",
      "name": "Open hover",
      "type": "command",
      "command": "editor.action.showHover"
    },
    {
      "keys": "<",
      "name": "Show buffers",
      "type": "command",
      "command": "workbench.action.showAllEditors"
    },
    {
      "keys": "g.g",
      "name": "Status",
      "type": "command",
      "command": "magit.status"
    },
    {
      "keys": "b.k",
      "name": "Close buffer",
      "type": "command",
      "command": "workbench.action.closeActiveEditor"
    }
  ],
  "workbench.editor.showTabs": false,
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true
  },
  "gitlens.codeLens.enabled": false,
  "gitlens.codeLens.recentChange.enabled": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  // Disable gitlens rebase view
  "workbench.editorAssociations": {
    "git-rebase-todo": "default"
  },
  "extensions.ignoreRecommendations": true,
  "emmet.showExpandedAbbreviation": "never",
  "explorer.confirmDelete": false,
  "cSpell.userWords": [
    "antd",
    "anticon",
    "ASVS",
    "atlassian",
    "authtag",
    "Calavera",
    "ciphertext",
    "configurability",
    "creeped",
    "customfield",
    "dataloader",
    "dedup",
    "deduping",
    "deduplicated",
    "demoable",
    "Eero",
    "gcloud",
    "grpc",
    "hubspot",
    "jsonb",
    "Juho",
    "kube",
    "kubernetes",
    "Manny",
    "Meche",
    "mrkdwn",
    "nodegit",
    "octokit",
    "opentelemetry",
    "prome",
    "psql",
    "rapu",
    "recordset",
    "reponame",
    "resynced",
    "Resyncing",
    "Rolledback",
    "Serializers",
    "Simpleview",
    "slonik",
    "sqlcommenter",
    "stackdriver",
    "swarmia",
    "timeframe",
    "timestamptz",
    "UNCATEGORIZED",
    "undefines",
    "Unencrypted",
    "unnest",
    "Untracked",
    "upsert",
    "upsertable",
    "worklog"
  ]
}
